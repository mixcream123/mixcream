"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LibraryInfoStrings = exports.Html5QrcodeScannerStrings = exports.Html5QrcodeStrings = void 0;
var Html5QrcodeStrings = (function () {
    function Html5QrcodeStrings() {
    }
    Html5QrcodeStrings.codeParseError = function (exception) {
        return "QR code parse error, error = " + exception;
    };
    Html5QrcodeStrings.errorGettingUserMedia = function (error) {
        return "Error getting userMedia, error = " + error;
    };
    Html5QrcodeStrings.onlyDeviceSupportedError = function () {
        return "The device doesn't support navigator.mediaDevices , only "
            + "supported cameraIdOrConfig in this case is deviceId parameter "
            + "(string).";
    };
    Html5QrcodeStrings.cameraStreamingNotSupported = function () {
        return "Camera streaming not supported by the browser.";
    };
    Html5QrcodeStrings.unableToQuerySupportedDevices = function () {
        return "Unable to query supported devices, unknown error.";
    };
    Html5QrcodeStrings.insecureContextCameraQueryError = function () {
        return "Camera access is only supported in secure context like https "
            + "or localhost.";
    };
    return Html5QrcodeStrings;
}());
exports.Html5QrcodeStrings = Html5QrcodeStrings;
var Html5QrcodeScannerStrings = (function () {
    function Html5QrcodeScannerStrings() {
    }
    Html5QrcodeScannerStrings.scanningStatus = function () {
        return "Scanning";
    };
    Html5QrcodeScannerStrings.idleStatus = function () {
        return "Idle";
    };
    Html5QrcodeScannerStrings.errorStatus = function () {
        return "Lỗi !";
    };
    Html5QrcodeScannerStrings.permissionStatus = function () {
        return "Permission";
    };
    Html5QrcodeScannerStrings.noCameraFoundErrorStatus = function () {
        return "No Cameras";
    };
    Html5QrcodeScannerStrings.lastMatch = function (decodedText) {
        return "Last Match: " + decodedText;
    };
    Html5QrcodeScannerStrings.codeScannerTitle = function () {
        return "Code Scanner";
    };
    Html5QrcodeScannerStrings.cameraPermissionTitle = function () {
        return "Yêu cầu truy cập camera";
    };
    Html5QrcodeScannerStrings.cameraPermissionRequesting = function () {
        return "Yêu cầu quyền tru cập camera";
    };
    Html5QrcodeScannerStrings.noCameraFound = function () {
        return "Không tìm thấy camera";
    };
    Html5QrcodeScannerStrings.scanButtonStopScanningText = function () {
        return "Dừng quét";
    };
    Html5QrcodeScannerStrings.scanButtonStartScanningText = function () {
        return "Bắt đầu quét";
    };
    Html5QrcodeScannerStrings.torchOnButton = function () {
        return "Switch On Torch";
    };
    Html5QrcodeScannerStrings.torchOffButton = function () {
        return "Switch Off Torch";
    };
    Html5QrcodeScannerStrings.torchOnFailedMessage = function () {
        return "Failed to turn on torch";
    };
    Html5QrcodeScannerStrings.torchOffFailedMessage = function () {
        return "Failed to turn off torch";
    };
    Html5QrcodeScannerStrings.scanButtonScanningStarting = function () {
        return "Đang đến camera...";
    };
    Html5QrcodeScannerStrings.textIfCameraScanSelected = function () {
        return "Quét từ ảnh trong máy";
    };
    Html5QrcodeScannerStrings.textIfFileScanSelected = function () {
        return "Scan using camera directly";
    };
    Html5QrcodeScannerStrings.selectCamera = function () {
        return "Chọn Camera";
    };
    Html5QrcodeScannerStrings.fileSelectionChooseImage = function () {
        return "Chọn ảnh";
    };
    Html5QrcodeScannerStrings.fileSelectionChooseAnother = function () {
        return "Chọn cái khác";
    };
    Html5QrcodeScannerStrings.fileSelectionNoImageSelected = function () {
        return "Không có ảnh được chọn";
    };
    Html5QrcodeScannerStrings.anonymousCameraPrefix = function () {
        return "Camera ẩn danh";
    };
    Html5QrcodeScannerStrings.dragAndDropMessage = function () {
        return "Thả ảnh để quét";
    };
    Html5QrcodeScannerStrings.dragAndDropMessageOnlyImages = function () {
        return "Or drop an image to scan (other files not supported)";
    };
    Html5QrcodeScannerStrings.zoom = function () {
        return "zoom";
    };
    Html5QrcodeScannerStrings.loadingImage = function () {
        return "Đang tải ảnh";
    };
    Html5QrcodeScannerStrings.cameraScanAltText = function () {
        return "Camera based scan";
    };
    Html5QrcodeScannerStrings.fileScanAltText = function () {
        return "Fule based scan";
    };
    return Html5QrcodeScannerStrings;
}());
exports.Html5QrcodeScannerStrings = Html5QrcodeScannerStrings;
var LibraryInfoStrings = (function () {
    function LibraryInfoStrings() {
    }
    LibraryInfoStrings.poweredBy = function () {
        return "Phát triển bởi";
    };
    LibraryInfoStrings.reportIssues = function () {
        return "Báo cáo vấn đề";
    };
    return LibraryInfoStrings;
}());
exports.LibraryInfoStrings = LibraryInfoStrings;
//# sourceMappingURL=strings.js.map